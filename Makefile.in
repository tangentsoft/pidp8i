CFLAGS=-std=c99 -Wno-unused-result -Wno-parentheses @BUILDMODE@ \
	-D_GNU_SOURCE -DUSE_READER_THREAD -DHAVE_DLOPEN=so -DPIDP8I -U__STRICT_ANSI__ \
	-I @srcdir@/src -I @srcdir@/src/PDP8 -I @builddir@/src

SIM = bin/pidp8i-sim
BINS = $(SIM) bin/pidp8i-test libexec/scanswitch

BUILDDIRS = bin libexec obj/PDP8

INSTDIRS = bin etc libexec share/boot share/media

OBJS = \
	obj/gpio.o \
	obj/sim_console.o \
	obj/PDP8/pdp8_df.o \
	obj/PDP8/pdp8_cpu.o \
	obj/PDP8/pdp8_clk.o \
	obj/PDP8/pdp8_ct.o \
	obj/PDP8/pdp8_dt.o \
	obj/PDP8/pdp8_fpp.o \
	obj/PDP8/pdp8_lp.o \
	obj/PDP8/pdp8_mt.o \
	obj/PDP8/pdp8_pt.o \
	obj/PDP8/pdp8_rf.o \
	obj/PDP8/pdp8_rk.o \
	obj/PDP8/pdp8_rl.o \
	obj/PDP8/pdp8_rx.o \
	obj/PDP8/pdp8_sys.o \
	obj/PDP8/pdp8_td.o \
	obj/PDP8/pdp8_tsc.o \
	obj/PDP8/pdp8_tt.o \
	obj/PDP8/pdp8_ttx.o \
	obj/scp.o \
	obj/sim_disk.o \
	obj/sim_ether.o \
	obj/sim_fio.o \
	obj/sim_serial.o \
	obj/sim_sock.o \
	obj/sim_tape.o \
	obj/sim_timer.o \
	obj/sim_tmxr.o

LIBS = -lm -ldl -lpthread

CLTXT = /boot/cmdline.txt


all: $(BUILDDIRS) examples $(BINS) @EXAMPLES@

clean:
	@test -h examples && rm examples || true
	@rm -f $(BINS) \
		@builddir@/obj/*.d \
		@builddir@/obj/*.o \
		@builddir@/obj/PDP8/*.d \
		@builddir@/obj/PDP8/*.o
	@-rmdir -p $(BUILDDIRS) 2> /dev/null || true

distclean: clean
	@rm -f \
		@builddir@/config.log \
		@builddir@/Makefile \
		@builddir@/autosetup/jimsh0 \
		@builddir@/etc/pidp8i-init \
		@builddir@/src/config.h \
		@builddir@/src/PDP8/pdp8_cpu.c \
		@builddir@/src/scp.c
	@for n in 0 2 3 4 6 7 ; do rm -f @builddir@/boot/$$n.script ; done

install: all
	@echo Installing to @prefix@...

	@# Create any missing install tree directories
	for d in $(INSTDIRS) ; do @INSTALL@ -m 755 -d @prefix@/$$d ; done

	@# Install files into those dirs and set their perms
	for f in $(BINS) ; do @INSTALL@ -m 755 -D -s $$f @prefix@/$$f ; done
	@INSTALL@ -m 755 @srcdir@/bin/pidp8i @prefix@/bin
	-setcap 'cap_sys_nice=eip' @prefix@/$(SIM) || true
	test -e @MEDIADIR@/os8/os8.rk05 || $(MAKE) mediainstall
	@INSTALL@ -m 644 @srcdir@/boot/*.script @BOOTDIR@

	@# If this is a Debian-type system, install needed helper programs
	@test -x /usr/bin/apt-get -a ! -h /media/usb && apt-get install usbmount || true
	@test -x /usr/bin/apt-get -a ! -x /usr/bin/screen && apt-get install screen || true

	@# Install the init script if this system is SysVinit based.
	@# Raspbian's systemd setup is close enough.
	@INSTALL@ -m 750 @srcdir@/etc/pidp8i-init @prefix@/etc
	@(  test -w /etc/init.d && \
		ln -sf @ABSPREFIX@/etc/pidp8i-init /etc/init.d/pidp8i && \
		update-rc.d pidp8i defaults \
	) || true

	@# Add installation bin dir to the non-root user's PATH unless it's
	@# already in there or we aren't running under sudo.
	@(for p in .profile .bash_profile ; do \
		test -n "$$SUDO_USER" -a -w "/home/$$SUDO_USER/$$p" && \
			! grep -qF "@ABSPREFIX@" "/home/$$SUDO_USER/$$p" && \
			echo "export PATH=\$$PATH:@ABSPREFIX@/bin" >> "/home/$$SUDO_USER/$$p" ; \
	done) || true

	@# If serial mod is disabled, turn off serial console and kgdb stuff
	@# in case they were enabled previously, else they will fight with
	@# our use of GPIO.
	@(  test -z "@SERIALSETUP@" -a -r $(CLTXT) && ! -w $(CLTXT) && \
		cp -p $(CLTXT) "$(CLTXT)"_orig && \
		sed -e 's/console\=[a-zA-Z0-9]+,[0-9]+ //' \
		    -e  's/kgdboc\=[a-zA-Z0-9]+,[0-9]+ //' -i $(CLTXT) \
	) || true

mediainstall:
	@echo "[Re]installing OS and program media..."
	@cd @srcdir@ ; \
	find media \( \
		-name \*.bin  -o \
		-name \*.dsk  -o \
		-name \*.rk05 -o \
		-name \*.tu56 \
	\) -exec @INSTALL@ -D -m 644 {} @ABSPREFIX@/share/{} \;

reconfig:
	@AUTOREMAKE@


# Rule for compiling *.c to *.o and autogenerating dependency info.
# Explained at http://scottmcpeak.com/autodepend/autodepend.html
#
# Reflect any changes here into near-duplicate below!
obj/%.o: @srcdir@/src/%.c
	$(CC) -c $(CFLAGS) @srcdir@/src/$*.c -o obj/$*.o
	$(CC) -MM $(CFLAGS) @srcdir@/src/$*.c > obj/$*.d
	@mv -f obj/$*.d obj/$*.d.tmp
	@sed -e 's|.*:|obj/$*.o:|' < obj/$*.d.tmp > obj/$*.d
	@sed -e 's/.*://' -e 's/\\$$//' < obj/$*.d.tmp | fmt -1 | \
		sed -e 's/^ *//' -e 's/$$/:/' >> obj/$*.d
	@rm -f obj/$*.d.tmp

# Near-duplicate of above rule for those *.c files generated from *.c.in
# files in the srcdir.  Needed when building out-of-tree.
obj/%.o: @builddir@/src/%.c
	$(CC) -c $(CFLAGS) @builddir@/src/$*.c -o obj/$*.o
	$(CC) -MM $(CFLAGS) @builddir@/src/$*.c > obj/$*.d
	@mv -f obj/$*.d obj/$*.d.tmp
	@sed -e 's|.*:|obj/$*.o:|' < obj/$*.d.tmp > obj/$*.d
	@sed -e 's/.*://' -e 's/\\$$//' < obj/$*.d.tmp | fmt -1 | \
		sed -e 's/^ *//' -e 's/$$/:/' >> obj/$*.d
	@rm -f obj/$*.d.tmp

# Rule for building example PAL assembly language programs
examples/%.pt examples/%.lst: @srcdir@/examples/%.pal
	palbart -lr examples/$*.pal
	mv examples/$*.rim examples/$*.pt

$(BUILDDIRS):
	mkdir -p $@

# If the examples directory doesn't exist, it's probably because we're
# building out-of-tree. Since palbart can't be told where to write its
# output files, we're going to have to symlink the whole tree from the
# srcdir to the builddir.  This means these outputs get written back to
# the source tree, but since we check changed *.pt and *.lst files back
# into source control anyway, this is mostly harmless.
examples:
	ln -s @srcdir@/examples @builddir@/examples

$(SIM): $(OBJS)
	$(CC) -o $@ $^ $(LIBS)

bin/pidp8i-test: obj/test.o obj/gpio.o
	$(CC) -o $@ $^ $(LIBS)

libexec/scanswitch: obj/scanswitch.o
	$(CC) -o $@ $^

ifeq ($(findstring clean,$(MAKECMDGOALS)),)
Makefile: @AUTODEPS@ @srcdir@/Makefile.in
	@@AUTOREMAKE@
endif

-include $(OBJS:.o=.d) obj/scanswitch.d

