#!/bin/sh

### BEGIN INIT INFO
# Provides:		pidp8i
# Required-Start:	$syslog
# Required-Stop:	$syslog
# Default-Start:	2 3 4 5
# Default-Stop:		0 1 6
# Short-Description:	PiDP-8 emulator
### END INIT INFO

# Init script for Oscar Vermeulen's pidp8 emulator front panel.  
# Author: Mark G Thomas <mark@misty.com> 2015-05-09

PATH=/sbin:/usr/sbin:/bin:/usr/bin
umask 022
. /lib/lsb/init-functions

prefix="@ABSPREFIX@"
sim="$prefix/bin/pidp8"
scanswitch="$prefix/bin/scanswitch"

# Requires screen utility for detached pidp console functionality.
test -x /usr/bin/screen || ( echo "screen not found" && exit 0 )

# Also check for other needed binaries
test -x $scanswitch || ( echo "$scanswitch not found" && exit 0 )
test -x $sim || ( echo "$sim not found" && exit 0 )

# Check if pidp is already runnning under screen.
#
is_running() {
	procs=`screen -ls pidp | egrep '[0-9]+\.pidp' | wc -l`
	return [ $procs -gt 0 ]
}

do_start() {
	if is_running ; then
	    echo "PiDP-8 is already running, not starting again." >&2
	    exit 0
	fi

	$scanswitch >/dev/null 2>&1
	script=$?
	# FIXME: -gt 8 case not handled!  Can be 127 for no bin.
	if [ $script -ne 8 ]; then
	    pidpscript="$prefix/bootscripts/""$script"".script"
	    echo "$pidpscript"
	else
	    echo "PiDP-8 STOP switch detected, aborting." >&2
	    exit 0
	fi

	log_daemon_msg "Starting PiDP-8" "pidp"
	screen -dmS pidp "$sim" $pidpscript
	status=$?
	log_end_msg $status
	return $status
}

do_stop() {
	if ! is_running ; then
	    echo "PiDP-8 is already stopped." >&2
	    status=1
	else
	    log_daemon_msg "Stopping PiDP-8" "pidp"
	    screen -S pidp -X quit
	    status=$?
	    log_end_msg $status
	fi
	return $status
}

case "$1" in
  start)
	do_start
	;;

  stop)
	do_stop
	;;

  restart)
	do_stop
	do_start
	;;

  status)
	screen -ls pidp | egrep '[0-9]+\.pidp'
	;;

  *)
	log_action_msg "Usage: /etc/init.d/pidp {start|stop|restart|status}" || true
	exit 1
esac

exit 0
